events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Gzip Compression
    gzip on;
    gzip_types text/plain application/json application/javascript text/css application/xml;

    # Backend Upstream
    upstream django_backend {
        server web:8000;
    }

    # HTTP → HTTPS Redirect
    server {
        listen 80;
        server_name api-videoflix.duckdns.org;
        
        # Redirect all HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS Server für DuckDNS
    server {
        listen 443 ssl http2;
        server_name api-videoflix.duckdns.org;

        # SSL Configuration (Zertifikate von /etc/ssl/videoflix/)
        ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/privkey.pem;
        
        # SSL Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;

        # Security Headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        # Client Max Body Size (für Video-Uploads)
        client_max_body_size 10G;

        # API Proxy zu Django Backend
        location /api/ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS Headers für Frontend-Domain
            add_header Access-Control-Allow-Origin "https://videoflix.philip-schaper.de" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-CSRFToken" always;
            add_header Access-Control-Allow-Credentials true always;
            
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://videoflix.philip-schaper.de";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-CSRFToken";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # Admin Interface
        location /admin/ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static Files
        location /static/ {
            alias /app/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Media Files (Videos, Thumbnails)
        location /media/ {
            alias /app/media/;
            expires 24h;
            add_header Cache-Control "public";
            
            # CORS für Media-Files
            add_header Access-Control-Allow-Origin "https://videoflix.philip-schaper.de" always;
        }

        # HLS Video Streaming
        location ~ ^/video/(\d+)/([^/]+)/(.*\.(m3u8|ts))$ {
            proxy_pass http://django_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # HLS-spezifische Headers
            add_header Cache-Control "no-cache";
            add_header Access-Control-Allow-Origin "https://videoflix.philip-schaper.de" always;
        }

        # Root → Admin redirect
        location = / {
            return 301 /admin/;
        }
    }
}
